package com.tiandennis.sudoku;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.view.MotionEvent;
import android.view.View;

class DrawView extends View {
    Cell[] Cells = new Cell[81];
    float width;
    float cell_size;
    Paint p = new Paint();
    String[] boards_hard = {"................12..3.45......6.1.7...4...6....58.........3.4...1.2......7.......",
            "................12..3.45......6.1.7...4...6....58.........3.5...1.2......7.......",
            "........1.......23....45......2.1.....4........67..5.......68...1.......32......9",
            "........1.......23..4..5......1.........3.6....7...58.....67....1...4...52.......",
            "........1.......23..4..5......1.........3.6....7...58.....97....1...4...52.......",
            "........1.......23..4..5......1.........4.6....6...4.5....76....1.......32...8...",
            "........1.......23..4..5......1.........4.6....6...4.5....76....1.......38...9...",
            "........1.......23..4..5......1.........4.6....6...4.5....76....1.......82...9...",
            "........1.....2.....1....34....1.......35.....6....7.......726...5...8..4.3......",
            "........1.....2.3...4..5..........5......46...17.8........1...7.2.9.....5.....4..",
            "................12..3..4.......2.......15...3..6...7.......6.7..2....48..5..3....",
            ".....1..2..3.......4.....5.....6.......53....7.....8.4.....4.3...7...6..1....2...",
            "................12..3.45......6.7..8..4...3....52.........6.5...8........2.1.....",
            "................12..3.45......6.7..8..4...3....52.........6.4...8........2.1.....",
            "........1.......23..4..5......2.........4.6....7...5.8....54....3.......29...7...",
            "........1.......23..4..2.......5.4.....16......7...8.....4.85...3.......61.......",
            "........1.......23..4..5......2.........4.6....7...5.8....54....3.......21...7...",
            "........1.......23..4..5......2.........4.6....7...5.8....54....9.......21...7...",
            "........1.....2.....3....45....5.......34.....6....7.......768...5...2..3.1......",
            ".......12..3.......45..6.......1.......7.......8...6.5.....53..9......7.2....3...",
            ".....6....59.....82....8....45........3........6..3.54...325..6..................",
            "..........72.6.1....51...82.8...13..4.........37.9..1.....238..5.4..9.........79.",
            "249.6...3.3....2..8.......5.....6......2......1..4.82..9.5..7....4.....1.7...3...",
            "6..3.2....5.....1..........7.26............543.........8.15........4.2........7..",
            "1....7.9..3..2...8..96..5....53..9...1..8...26....4...3......1..41.....7..7...3..",
            ".......4.....1.5..2...39..6..2.63..8.8.7......3.........6.......2..86..9..91...6.",
            "1.....7...5...91...98....5....3......4..2.3..8....1.9...26.........4...69....5.7.",
            "..28......3..6...71......4.6...9.....5.6....9....57.6....3..1...7...6..84......2.",
            ".......4..1..2...84..9..7..6...8.....3.1.2...8..3....1.6..1...3.....7.5...5...9..",
            ".3.5....9..1....4.4...2........73..6..36..95..6.........2..8....5.7....38.....1..",
            ".6.7.....7...5...3..5..21...3.....4.4...6......1..59....8...........8.59...12.8..",
            "2...3....1.......7..91..5.......3..4....7..8..9.5..2...25....4.9..2..6..4.6..8...",
            "8..........36......7..9.2...5...7.......457.....1...3...1....68..85...1..9....4..",
            "6....894.9....61...7..4....2..61..........2...89..2.......6...5.......3.8....16.."};
    String[] sols_hard = {"691782345547369812283145796938621574124573689765894123852937461416258937379416258",
            "691782354457369812283145796938621475124573689765894123842937561316258947579416238",
            "469823751851697423732145986573281694184569237296734518945316872618972345327458169",
            "672983451951476823384215976468159237295738614137642589843567192719824365526391748",
            "672983451951476823384215976468159237295738614137642589843597162716824395529361748",
            "952637841768491523134825976543169287871542639296783415489376152617254398325918764",
            "853627941769481523124935876548162397971543682236798415492376158617854239385219764",
            "258637941769481523134925876542168397971543682386792415493276158617854239825319764",
            "756483921934162578281975634542719386817356492369824715198547263675231849423698157",
            "352679841786142935194835276649321758835794612217586394963418527428957163571263489",
            "165972834748365912293814567439627158872159643516483729981246375327591486654738291",
            "658941372973256418241783956812467593496538127735129864589674231327815649164392785",
            "648921753957386412213745896132657948764819325895234167371462589486593271529178634",
            "658921734947386512213745896132657948764819325895234167371562489586493271429178653",
            "362789451759461823184325967548276319913548672627193548871954236436812795295637184",
            "253786941986541723174392658391857462842169375567234819729418536438625197615973284",
            "962783451751469823384125967548276139193548672627931548879354216436812795215697384",
            "362789451759461823184325967548276139931548672627913548873154296496832715215697384",
            "796485321458132976213679845139758462827346159564921738942517683675893214381264597",
            "679354812123987456845126739364519287592768143718432695487695321936241578251873964",
            "318496275459712368267538491745681932983254617126973854891325746672149583534867129",
            "143258679872964153695137482986541327451372968237896514719623845564789231328415796",
            "249865173531974268867132495423786519986251347715349826692518734354627981178493652",
            "614382579953764812827591436742635198168279354395418627286157943579843261431926785",
            "162857493534129678789643521475312986913586742628794135356478219241935867897261354",
            "961257843378614592245839716192563478684721935537948621416395287723486159859172364",
            "123456789456789123798213654219374865645928317837561492382697541571842936964135278",
            "742835691539461287186972543618293754257684319394157862825349176971526438463718925",
            "253871649917426538486953712621784395539162874874395261762519483398247156145638927",
            "236541879781396542495827631528973416143682957967154328312468795654719283879235164",
            "864713592712956483395482176237891645459267318681345927928534761143678259576129834",
            "287635419153429867649187523512863794364972185798541236825796341931254678476318952",
            "812753649943682175675491283154237896369845721287169534521974368438526917796318452",
            "625178943948326157371945862257619384463587291189432576792863415516294738834751629"};

    String[] boards = {"..19....39..7..16..3...5..7.5......9..43.26..2......7.6..1...3..42..7..65....68..",
            "...1254....84.....42.8......3.....95.6.9.2.1.51.....6......3.49.....72....1298...",
            ".6234.75.1....56..57.....4.....948..4.......6..583.....3.....91..64....7.59.8326.",
            "3..........5..9...2..5.4....2....7..16.....587.431.6.....89.1......67.8......5437",
            "63..........5....8..5674.......2......34.1.2.......345.....7..4.8.3..9.29471...8.",
            "....2..4...8.35.......7.6.2.31.4697.2...........5.12.3.49...73........1.8....4...",
            "361.259...8.96..1.4......57..8...471...6.3...259...8..74......5.2..18.6...547.329",
            ".5.8.7.2.6...1..9.7.254...6.7..2.3.15.4...9.81.3.8..7.9...762.5.6..9...3.8.1.3.4.",
            ".8...5........3457....7.8.9.6.4..9.3..7.1.5..4.8..7.2.9.1.2....8423........1...8.",
            "..35.29......4....1.6...3.59..251..8.7.4.8.3.8..763..13.8...1.4....2......51.48..",
            "...........98.51...519.742.29.4.1.65.........14.5.8.93.267.958...51.36...........",
            ".2..3..9....9.7...9..2.8..5..48.65..6.7...2.8..31.29..8..6.5..7...3.9....3..2..5.",
            "..5.....6.7...9.2....5..1.78.415.......8.3.......928.59.7..6....3.4...1.2.....6..",
            ".4.....5...19436....9...3..6...5...21.3...5.68...2...7..5...2....24367...3.....4.",
            "..4..........3...239.7...8.4....9..12.98.13.76..2....8.1...8.539...4..........8..",
            "36..2..89...361............8.3...6.24..6.3..76.7...1.8............418...97..3..14",
            "5..4...6...9...8..64..2.........1..82.8...5.17..5.........9..84..3...6...6...3..2",
            "..72564..4.......5.1..3..6....5.8.....8.6.2.....1.7....3..7..9.2.......4..63127..",
            "..........79.5.18.8.......7..73.68..45.7.8.96..35.27..7.......5.16.3.42..........",
            ".3.....8...9...5....75.92..7..1.5..8.2..9..3.9..4.2..1..42.71....2...8...7.....9.",
            "2..17.6.3.5....1.......6.79....4.7.....8.1.....9.5....31.4.......5....6.9.6.37..2",
            ".......8.8..7.1.4..4..2..3.374...9......3......5...321.1..6..5..5.8.2..6.8.......",
            ".......85...21...996..8.1..5..8...16.........89...6..7..9.7..523...54...48.......",
            "6.8.7.5.2.5.6.8.7...2...3..5...9...6.4.3.2.5.8...5...3..5...2...1.7.4.9.4.9.6.7.1",
            ".5..1..4.1.7...6.2...9.5...2.8.3.5.1.4..7..2.9.1.8.4.6...4.1...3.4...7.9.2..6..1.",
            ".53...79...97534..1.......2.9..8..1....9.7....8..3..7.5.......3..76412...61...94.",
            "..6.8.3...49.7.25....4.5...6..317..4..7...8..1..826..9...7.2....75.4.19...3.9.6..",
            "..5.8.7..7..2.4..532.....84.6.1.5.4...8...5...7.8.3.1.45.....916..5.8..7..3.1.6..",
            "...9..8..128..64...7.8...6.8..43...75.......96...79..8.9...4.1...36..284..1..7...",
            "....8....27.....54.95...81...98.64...2.4.3.6...69.51...17...62.46.....38....9....",
            "...6.2...4...5...1.85.1.62..382.671...........194.735..26.4.53.9...2...7...8.9...",
            "4.....8.5.3..........7......2.....6.....8.4......1.......6.3.7.5..2.....1.4......",
            "52...6.........7.13...........4..8..6......5...........418.........3..2...87.....",
            "6.....8.3.4.7.................5.4.7.3..2.....1.6.......2.....5.....8.6......1....",
            "48.3............71.2.......7.5....6....2..8.............1.76...3.....4......5....",
            "....14....3....2...7..........9...3.6.1.............8.2.....1.4....5.6.....7.8...",
            "......52..8.4......3...9...5.1...6..2..7........3.....6...1..........7.4.......3.",
            "6.2.5.........3.4..........43...8....1....2........7..5..27...........81...6.....",
            ".524.........7.1..............8.2...3.....6...9.5.....1.6.3...........897........",
            "6.2.5.........4.3..........43...8....1....2........7..5..27...........81...6.....",
            ".923.........8.1...........1.7.4...........658.........6.5.2...4.....7.....9.....",
            "6..3.2....5.....1..........7.26............543.........8.15........4.2........7..",
            ".6.5.1.9.1...9..539....7....4.8...7.......5.8.817.5.3.....5.2............76..8...",
            "..5...987.4..5...1..7......2...48....9.1.....6..2.....3..6..2.......9.7.......5..",
            "3.6.7...........518.........1.4.5...7.....6.....2......2.....4.....8.3.....5.....",
            "1.....3.8.7.4..............2.3.1...........958.........5.6...7.....8.2...4.......",
            "6..3.2....4.....1..........7.26............543.........8.15........4.2........7..",
            "....3..9....2....1.5.9..............1.2.8.4.6.8.5...2..75......4.1..6..3.....4.6.",
            "45.....3....8.1....9...........5..9.2..7.....8.........1..4..........7.2...6..8..",
            ".237....68...6.59.9.....7......4.97.3.7.96..2.........5..47.........2....8.......",
            "..84...3....3.....9....157479...8........7..514.....2...9.6...2.5....4......9..56",
            ".98.1....2......6.............3.2.5..84.........6.........4.8.93..5...........1..",
            "..247..58..............1.4.....2...9528.9.4....9...1.........3.3....75..685..2...",
            "4.....8.5.3..........7......2.....6.....5.4......1.......6.3.7.5..2.....1.9......",
            ".2.3......63.....58.......15....9.3....7........1....8.879..26......6.7...6..7..4",
            "1.....7.9.4...72..8.........7..1..6.3.......5.6..4..2.........8..53...7.7.2....46",
            "4.....3.....8.2......7........1...8734.......6........5...6........1.4...82......",
            ".......71.2.8........4.3...7...6..5....2..3..9........6...7.....8....4......5....",
            "6..3.2....4.....8..........7.26............543.........8.15........8.2........7..",
            ".47.8...1............6..7..6....357......5....1..6....28..4.....9.1...4.....2.69.",
            "......8.17..2........5.6......7...5..1....3...8.......5......2..4..8....6...3....",
            "38.6.......9.......2..3.51......5....3..1..6....4......17.5..8.......9.......7.32",
            "...5...........5.697.....2...48.2...25.1...3..8..3.........4.7..13.5..9..2...31..",
            ".2.......3.5.62..9.68...3...5..........64.8.2..47..9....3.....1.....6...17.43....",
            ".8..4....3......1........2...5...4.69..1..8..2...........3.9....6....5.....2.....",
            "..8.9.1...6.5...2......6....3.1.7.5.........9..4...3...5....2...7...3.8.2..7....4",
            "4.....5.8.3..........7......2.....6.....5.8......1.......6.3.7.5..2.....1.8......",
            "1.....3.8.6.4..............2.3.1...........958.........5.6...7.....8.2...4.......",
            "1....6.8..64..........4...7....9.6...7.4..5..5...7.1...5....32.3....8...4........",
            "249.6...3.3....2..8.......5.....6......2......1..4.82..9.5..7....4.....1.7...3...",
            "...8....9.873...4.6..7.......85..97...........43..75.......3....3...145.4....2..1",
            "...5.1....9....8...6.......4.1..........7..9........3.8.....1.5...2..4.....36....",
            "......8.16..2........7.5......6...2..1....3...8.......2......7..3..8....5...4....",
            ".476...5.8.3.....2.....9......8.5..6...1.....6.24......78...51...6....4..9...4..7",
            ".....7.95.....1...86..2.....2..73..85......6...3..49..3.5...41724................",
            ".4.5.....8...9..3..76.2.....146..........9..7.....36....1..4.5..6......3..71..2..",
            ".834.........7..5...........4.1.8..........27...3.....2.6.5....5.....8........1..",
            "..9.....3.....9...7.....5.6..65..4.....3......28......3..75.6..6...........12.3.8",
            ".26.39......6....19.....7.......4..9.5....2....85.....3..2..9..4....762.........4",
            "2.3.8....8..7...........1...6.5.7...4......3....1............82.5....6...1.......",
            "6..3.2....1.....5..........7.26............843.........8.15........8.2........7..",
            "1.....9...64..1.7..7..4.......3.....3.89..5....7....2.....6.7.9.....4.1....129.3.",
            ".........9......84.623...5....6...453...1...6...9...7....1.....4.5..2....3.8....9",
            ".2....5938..5..46.94..6...8..2.3.....6..8.73.7..2.........4.38..7....6..........5",
            "9.4..5...25.6..1..31......8.7...9...4..26......147....7.......2...3..8.6.4.....9.",
            "...52.....9...3..4......7...1.....4..8..453..6...1...87.2........8....32.4..8..1.",
            "53..2.9...24.3..5...9..........1.827...7.........981.............64....91.2.5.43.",
            "1....786...7..8.1.8..2....9........24...1......9..5...6.8..........5.9.......93.4",
            "....5...11......7..6.....8......4.....9.1.3.....596.2..8..62..7..7......3.5.7.2..",
            ".47.2....8....1....3....9.2.....5...6..81..5.....4.....7....3.4...9...1.4..27.8..",
            "......94.....9...53....5.7..8.4..1..463...........7.8.8..7.....7......28.5.26....",
            ".2......6....41.....78....1......7....37.....6..412....1..74..5..8.5..7......39..",
            "1.....3.8.6.4..............2.3.1...........758.........7.5...6.....8.2...4.......",
            "2....1.9..1..3.7..9..8...2.......85..6.4.........7...3.2.3...6....5.....1.9...2.5",
            "..7..8.....6.2.3...3......9.1..5..6.....1.....7.9....2........4.83..4...26....51.",
            "...36....85.......9.4..8........68.........17..9..45...1.5...6.4....9..2.....3...",
            "34.6.......7.......2..8.57......5....7..1..2....4......36.2..1.......9.......7.82",
            "......4.18..2........6.7......8...6..4....3...1.......6......2..5..1....7...3....",
            ".4..5..67...1...4....2.....1..8..3........2...6...........4..5.3.....8..2........",
            ".......4...2..4..1.7..5..9...3..7....4..6....6..1..8...2....1..85.9...6.....8...3",
            "8..7....4.5....6............3.97...8....43..5....2.9....6......2...6...7.71..83.2",
            ".8...4.5....7..3............1..85...6.....2......4....3.26............417........",
            "1....7.9..3..2...8..96..5....53..9...1..8...26....4...3......1..4......7..7...3..",
            "..53.....8......2..7..1.5..4....53...1..7...6..32...8..6.5....9..4....3......97..",
            "..........1.62..9...2..931...4..6.8...87.21...3.8..5...691..4...8..73.5..........",
            ".21.7...63.9...5.......1...13...8....84...9....6...34......6.87.....36..7...8..9.",
            "85...24..72......9..4.........1.7..23.5...9...4...........8..7..17..........36.4.",
            "..............3.85..1.2.......5.7.....4...1...9.......5......73..2.1........4...9"};

    String[] sols = {"761928453925743168438615927357461289894372615216589374689154732142837596573296841",
            "976125438158436927423879156234761895867952314519384762782513649395647281641298573",
            "962341758148975623573268149321694875487512936695837412834726591216459387759183264",
            "397681524645279813218534976823956741169742358754318692472893165531467289986125437",
            "639218457471539268825674139564823791793451826218796345352987614186345972947162583",
            "697128345428635197315479682531246978286397451974581263149852736752963814863714529",
            "361725948587964213492831657638259471174683592259147836746392185923518764815476329",
            "359867124648312597712549836876924351524731968193685472931476285465298713287153649",
            "786945312219863457534271869165482973327619548498537126951728634842356791673194285",
            "743512986589346217126987345934251768671498532852763491398675124417829653265134879",
            "782614359439825176651937428293471865568392714147568293326749581975183642814256937",
            "428531796365947182971268435214896573697453218583172964849615327752389641136724859",
            "425781936178369524369524187894157362652843791713692845987216453536478219241935678",
            "348267951571943628269185374697351482123874596854629137415798263982436715736512849",
            "124986735867435912395712684478359261259861347631274598712698453983547126546123879",
            "361524789789361425524879361893157642412683597657942138148796253235418976976235814",
            "581479263329156847647328159956731428238964571714582936172695384893247615465813792",
            "387256419469781325512439867123548976758963241694127583835674192271895634946312758",
            "345871269279653184861429537197346852452718396683592741738264915516937428924185673",
            "235761489419328576867549213746135928521896734983472651394287165652913847178654392",
            "298175643657394128134286579821649735573821496469753281312468957785912364946537812",
            "761543289832791645549628137374215968128936574695487321417369852953872416286154793",
            "132649785758213649964785123543897216276531894891426537619378452327154968485962371",
            "698173542354628179172549368531897426946312857827456913765931284213784695489265731",
            "852716943197843652463925187278634591645179328931582476786491235314258769529367814",
            "453218796629753481178496532796582314314967825285134679542879163937641258861325947",
            "516289347849173256732465918698317524327954861154826739961732485275648193483591672",
            "945681723781234965326759184269175348138942576574863219457326891612598437893417652",
            "365942871128756493974813562819435627537268149642179358296384715753691284481527936",
            "134587296278169354695234817359816472821473569746925183917348625462751938583692741",
            "193672485462358971785914623538296714674135298219487356826741539941523867357869142",
            "417369825632158947958724316825437169791586432346912758289643571573291684164875293",
            "527316489896542731314987562172453896689271354453698217941825673765134928238769145",
            "617459823248736915539128467982564371374291586156873294823647159791385642465912738",
            "487312695593684271126597384735849162914265837268731549851476923379128456642953718",
            "962314857134587269578296413847962531651873942329145786285639174793451628416728395",
            "416837529982465371735129468571298643293746185864351297647913852359682714128574936",
            "682154379951763842374892165437528916816937254295416738568271493729345681143689527",
            "652481937834679152971325864467812593315794628298563471186937245523146789749258316",
            "682153479951764832374892165437528916816947253295316748568271394729435681143689527",
            "792351648543786129681429537157648293924137865836295471368572914419863752275914386",
            "614382579953764812827591436742635198168279354395418627286157943579843261431926785",
            "863521794127496853954387621645839172739142568281765439498653217512974386376218945",
            "135426987846957321927381465213748659598163742674295813351674298482539176769812534",
            "356871294972643851841952736213465987794318625685297413128736549569184372437529168",
            "129576348376428519584391627293815764417263895865749132958632471731984256642157983",
            "615382479943765812827491536752634198168279354394518627286157943579843261431926785",
            "718435692963278541254961378547612839192387456386549127675893214421756983839124765",
            "458276931623891475197534286371452698269783154845169327712948563986315742534627819",
            "123759486874261593965384721216543978357896142498127365532478619641932857789615234",
            "518476239427359618963821574795248361832617945146935827379564182651782493284193756",
            "498716523257839461136425987971382654684157392523694718765241839319578246842963175",
            "132479658847563291956281347413725869528196473769348125271854936394617582685932714",
            "417369825638125947952748316825437169791856432346912758284693571573281694169574283",
            "925371486163498725874562391542689137618753942739124658487915263351246879296837514",
            "123456789649837251857291634274518963398672415561943827416725398985364172732189546",
            "475691328961832745823754196259143687347586219618927534534269871796318452182475963",
            "349526871521897643876413529718369254465281397932745186654178932187932465293654718",
            "618342579943765182527891436752634891861279354394518627286157943179483265435926718",
            "947582361863471952152639784624813579738295416519764823285946137396157248471328695",
            "254379861761248593893516742326791458915824376487653219538167924142985637679432185",
            "385621497179584326426739518762395841534812769891476253917253684243168975658947132",
            "836521947142379586975648321364892715259167438781435269598214673413756892627983154",
            "427593186315862479968174325659328714731649852284751963593287641842916537176435298",
            "781942365324576918659831724815723496936154872247698153578369241162487539493215687",
            "748392165369514728125876943932147856687235419514689372853461297476923581291758634",
            "417369528839125746652748319925837461741956832386412957294683175573291684168574293",
            "124597368369428517587361924293815746416273895875946132958632471631784259742159683",
            "137926485964587231825341967241895673673412598589673142758164329396258714412739856",
            "249865173531974268867132495423786519986251347715349826692518734354627981178493652",
            "351846729287319645694725183168534972725198364943267518516483297832971456479652831",
            "748591326195623847263487519421936758356874291987152634832749165679215483514368972",
            "723469851651238794894715632375691428912874365486523917248356179137982546569147283",
            "947628351863751492125349678734895126589162734612473985478236519256917843391584267",
            "132467895957381246864529731429673158578912364613854972385296417241735689796148523",
            "143587962852496731976321584214675398635819427789243615321764859468952173597138246",
            "783465219421973658965281734347128596198546327652397481216854973534719862879632145",
            "219675843865439721743281596936512487157348962428967135382754619671893254594126378",
            "126739845847625391935481762213864579654973218798512436361248957489157623572396184",
            "273681495891754263546392178169537824485269731327148956734916582958423617612875349",
            "654312879913876452827495136742638591165729384398541627286157943471983265539264718",
            "152738946864291375973645281216357498348912567597486123421863759639574812785129634",
            "174589362953261784862347951219673845387415296546928173628194537495732618731856429",
            "126478593837592461945361278412937856569184732783256914251649387374815629698723145",
            "964815237258637149317924658872159364495263781631478925783596412529341876146782593",
            "476529183895173624321864795517398246289645371634712958752431869168957432943286517",
            "538127946624839751719645382965314827381762594247598163493281675856473219172956438",
            "124597863937648215856231749513786492482913657769425138698374521341852976275169384",
            "872459631154683972963721485216834759549217368738596124481362597627945813395178246",
            "947326581852491673136587942284735169693812457715649238579168324328954716461273895",
            "215876943678394215349125876587432169463981752192657384826743591734519628951268437",
            "124397856835641297967825341241538769583769412679412538312974685498256173756183924",
            "125976348369428517784351926253817694416293875897645132978532461631784259542169783",
            "283741596615239748974865321397126854861453972452978613528394167736512489149687235",
            "957638421146729385832541679419352768628417953375986142791265834583174296264893517",
            "127365489853491276964278351231756894548932617679184523312547968485619732796823145",
            "345671298987253146621984573264795831573816429198432657836529714712348965459167382",
            "265389471874251693193647852327894165946125387518763249631578924452916738789432516",
            "842359167573186942619274538127865394435791286968423715781942653354617829296538471",
            "538219746962874531174356298283497615741568329695123874329645187857931462416782953",
            "863751294957432681124689573532976148619843725748125936386217459295364817471598362",
            "986324157124759368537861429413285976695173284278946513342617895869532741751498632",
            "162857493534129678789643521475312986913586742628794135356478219241935867897261354",
            "145327698839654127672918543496185372218473956753296481367542819984761235521839764",
            "945317268813625794672489315124536987598742136736891542269158473481273659357964821",
            "821579436349862571657341829132498765584637912976125348413956287298713654765284193",
            "859612437723854169164379528986147352375268914241593786432981675617425893598736241",
            "987654321246173985351928746128537694634892157795461832519286473472319568863745219"};

    int board_number = (int) (Math.random() * boards.length);
    String board = boards[board_number]; // ".....9....87.....65....6....48........3........9..3.84...358..9..................";
    String sol = sols[board_number]; // "624739518987215436531486792248591367763824951159673284412358679396147825875962143";
    boolean won = false;

    public DrawView(Context context) {
        super(context);

//        String value;
//        for (int i = 0; i < 9; i++)
//            for (int j = 0; j < 9; j++) {
//                value = board.substring(i * 9 + j, i * 9 + j + 1);
//                if (value.equals("."))
//                    value = "";
//                Cells[i * 9 + j] = new Cell(j * 100 + 90, i * 100 + 200, (j + 1) * 100 + 90, (i + 1) * 100 + 200, value, !value.equals(""), sol.substring(i * 9 + j, i * 9 + j + 1));
//            }
    }

    @Override
    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
        cell_size = getWidth() * 5 / 54f;
        width = (getWidth() - cell_size * 9)/2f;
        super.onLayout(changed, left, top, right, bottom);
        reset();
//        c1.left = a / 2f - 50;
//        c1.top = a / 2f - 50;
//        c1.right = a / 2f + 50;
//        c1.bottom = a / 2f + 50;
    }

    //    @Override
    protected void onDraw(Canvas canvas) {
        super.onDraw(canvas);
        for (Cell c : Cells)
            c.draw(canvas, won);
        p.setStrokeWidth(10);
        canvas.drawLine(width + 3 * cell_size, 2 * cell_size, width + 3 * cell_size, 11 * cell_size, p);
        canvas.drawLine(width + 6 * cell_size, 2 * cell_size, width + 6 * cell_size, 11 * cell_size, p);
        canvas.drawLine(width, 5 * cell_size, width + 9 * cell_size, 5 * cell_size, p);
        canvas.drawLine(width, 8 * cell_size, width + 9 * cell_size, 8 * cell_size, p);
    }

    void reset() {
        board_number = (int) (Math.random() * boards.length);
        board = boards[board_number]; // ".....9....87.....65....6....48........3........9..3.84...358..9..................";
        sol = sols[board_number]; // "624739518987215436531486792248591367763824951159673284412358679396147825875962143";
        won = false;
        String value;
        for (int i = 0; i < 9; i++)
            for (int j = 0; j < 9; j++) {
                value = board.substring(i * 9 + j, i * 9 + j + 1);
                if (value.equals("."))
                    value = "";
                Cells[i * 9 + j] = new Cell(j * cell_size + width, i * cell_size + cell_size * 2, (j + 1) * cell_size + width, (i + 1) * cell_size + cell_size * 2, cell_size, value, !value.equals(""), sol.substring(i * 9 + j, i * 9 + j + 1), false, (i / 3 * 3) + (j / 3));
            }
        invalidate();
    }

    @Override
    public boolean onTouchEvent(MotionEvent event) {
        if (event.getAction() == MotionEvent.ACTION_UP) {
            performClick();
            won = true;
            for (Cell c : Cells) {
                if (c.contains(event.getX(), event.getY()) && !c.isFixed()) {
                    int val;
                    if (c.getValue().equals("")) {
                        val = 1;
                    } else {
                        val = Integer.parseInt(c.getValue());
                        val = val == 9 ? 0 : val + 1;
                    }
                    String num = val == 0 ? "" : "" + val;
                    c.setValue(num);
                }
                if (!c.getValue().equals(c.getSol()))
                    won = false;
            }

            for (Cell c : Cells) {
                boolean conflict = false;
                for (Cell d : Cells) {
                    if (!c.equals(d) && (c.getLeft() == d.getLeft() || c.getTop() == d.getTop() || c.getGroup() == d.getGroup()) && c.getValue().equals(d.getValue())) {
                        d.setConflict(true);
                        conflict = true;
                    }
                }
                c.setConflict(conflict);
            }

            invalidate();
        }
        return true;
    }

    @Override
    public boolean performClick() {
        return super.performClick();
    }
}
